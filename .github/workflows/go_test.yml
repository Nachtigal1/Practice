name: Test
on:
 push:
    branches:
      - master
      - main
      - test-github-actions
 pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Download Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...        
    - name: Build
      env:
        GOPROXY: "https://proxy.golang.org"
      run: go build ./pkg/...

    - name: Test
      env:
        GOPROXY: "https://proxy.golang.org"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: go test -v ./pkg/... 

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Lint Action
        uses: wearerequired/lint-action@v2.3.0
  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2


  image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/test_ci:latest
          
  image:
    name: Build Docker container iamge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Publish to Github Packages
        uses: docker/build-push-action@v4
        with:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
         registry: docker.pkg.github.com
         repository: ${{ github.repository }}/next
         tags: latest, ${{ github.run_number }}
      - name: Publish to  Docker Hub
        uses: docker/build-push-action@v4
        with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
         repository: lms/next 
     
name: Test
on:
  push:
    branches:
      - master
      - main
      - test-github-actions
  pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Download Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...        
      - name: Build
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go build ./pkg/...

      - name: Test grading
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go test -v ./pkg/grading/repository/postgres/integration-test/...
            
        
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Lint Action
        uses: wearerequired/lint-action@v2.3.0
  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2


  build_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6
        with:
          cosign-release: 'v1.11.0'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push auditlog
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/auditlog:latest
          file: ./cmd/auditlog/Dockerfile
          
      - name: Build and push grading
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/grading:latest
          file: ./cmd/grading/Dockerfile
          
      - name: Build and push inventory
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/inventory:latest
          file: ./cmd/inventory/Dockerfile
          
      - name: Build and push notification
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/notification:latest
          file: ./cmd/notification/Dockerfile
          
      - name: Build and push rbac
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/rbac:latest
          file: ./cmd/rbac/Dockerfile 
          
      - name: Build and push rbacgen
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/rbacgen:latest
          file: ./cmd/rbacgen/Dockerfile
          
      - name: Build and push search
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/search:latest
          file: ./cmd/search/Dockerfile
          
      - name: Build and push syllabus
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/syllabus:latest
          file: ./cmd/syllabus/Dockerfile
          
      - name: Build and push user-management
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/user-management:latest
          file: ./cmd/user-management/Dockerfile
