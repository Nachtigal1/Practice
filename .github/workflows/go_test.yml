name: Test
on:
 push:
    branches:
      - master
      - main
      - test-github-actions
 pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Download Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...        
    - name: Build
      env:
        GOPROXY: "https://proxy.golang.org"
      run: go build ./pkg/...

    - name: Test
      env:
        GOPROXY: "https://proxy.golang.org"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: go test -v ./pkg/... 

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Lint Action
        uses: wearerequired/lint-action@v2.3.0
  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2


  image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.nachtigal1 }}
          password: ${{ secrets.lms }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./api
          push: true
          tags: ${{ secrets.nachtigal1 }}/lms:latest
